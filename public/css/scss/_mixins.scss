@mixin resetColums () {
	$total-columns: 12;
	$column-width: (100 /$total-columns) * 1%;
}
@mixin at-breakpoint($viewport) {
	
	@if nth($viewport, 1) == small-screen {
		$total-columns: 6;
		$column-width: (100 /$total-columns) * 1%;
		$page-margin: 3%;

	}

	@else if nth($viewport, 1) == medium-screen {
		$total-columns: 12;
		$column-width: (100 /$total-columns) * 1%;
		$page-margin: 6%;


	}

	@else if nth($viewport, 1) == large-screen {
		$total-columns: 12;
		$column-width: (100 /$total-columns) * 1%;


	}

	@if length($viewport) == 2 {
		@media (min-width: nth($viewport, 2)) {
			@content;
		}
	} 

	@else {
		@media (min-width: nth($viewport, 2)) and (max-width: nth($viewport, 3)) { 
			@content; 
		}
	}
	@include resetColums;
}

@mixin retinaTablet(){
	@media (min-width: 725px) and (max-width: 999px) and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi){
		@content;
	}
}


@mixin span ($i) {

	@if $total-columns == 1 { 

		width: $column-width;
	}

	@else {
		width: ( $i/$total-columns)  * 100%;

	}

	-moz-box-sizing: border-box; 
	-webkit-box-sizing: border-box; 
	box-sizing: border-box;

}



// offset span with margin

@mixin offset-span ($dir, $num) {

	margin-#{$dir}: (100 / ($total-columns / $num) )  * 1%;
}

// offset span with padding

@mixin offset-padding-span ($dir, $num) {

	padding-#{$dir}: (100 / ($total-columns / $num) )  * 1%;
}



@mixin font-family {
	font-family: helvetica, arial, sans-serif;
	// font-smooth: always;
	-webkit-font-smoothing: antialiased;
}

@mixin clearfix-self {
	zoom:1;
	float: none;
	clear: both;
}

@mixin clearfix {
	zoom:1;

		&:after {
			content: "";
			display: block;
			height: 0;
			overflow: hidden;
			float: none;
			clear: both;
			
		}

}


@mixin hidetext {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}
@mixin input-placeholder($color) {
  &.placeholder {
    color: $color; 
    }
  &:-moz-placeholder {
    color: $color; 
    }
  &::-webkit-input-placeholder {
    color: $color; 
    } 
}



@mixin pxtoem($px) {

	font-size: (round( (($px/($base-px / $base-font-size))/$base-font-size) * 100 ) / 100 ) * 1em ;
}

@mixin pxtorem($parentpx, $px) {
	//outputs the relative em for current font size
	font-size: $px/$parentpx * 1em;
}

@mixin triangle-down ($color, $border-color, $px) {
	&:after,
	&:before {
		content: "";
		display: block;
		width: 0;
		height: 0;
	}


	&:after {
		border-left: $px - 1 solid transparent;
		border-right: $px - 1 solid transparent;
		border-top: $px - 1 solid $color;
		position: absolute;
		top: -1px;
		left: 50%;
		margin-left: - ($px/2 - 1 ) ;
		
	}

	&:before {

		border-left: $px solid transparent;
		border-right: $px solid transparent;
		border-top: $px solid $border-color;
		position: absolute;
		top: 0;
		left: 50%;
		margin-left: - $px / 2;
	}
}


@mixin social-accent($x, $y) {
	content: '';
	position: absolute;
	display: block;
	top: $y;
	left: $x;
}

@mixin parent-margin-fix() {
	padding-top: 1px;
	margin-top: -1px;
}
